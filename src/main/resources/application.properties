spring.application.name=e-com
server.port=${PORT}
fake.store.base.url=${BASE_URL}

spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce_db
spring.datasource.username=${DATASOURCE_USER}
spring.datasource.password=${DATASOURCE_PASS}

#this tells springboot which JDBC driver class to use.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Tells hibernate to print all the generated SQL queries . this is usefull for debugging
spring.jpa.show-sql=true

#Specifies the SQL dialect hibernate should use .
#Ensures hibernate generates SQL-optimised SQL syntax without this,
# Spring boot might guess based on the jdbc URL.
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect
# how we want to control how hibernate handles schema generation:
#none > no changes to DB Schema
# create > Dropes and recreates schema in every run
# create-drop > Drop schema at app stops
# update > updates DB schema(add new cols / table ) , won't delete anything
spring.jpa.hibernate.ddl-auto=update




